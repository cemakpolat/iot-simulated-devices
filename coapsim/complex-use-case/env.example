# --- AI Controller (Server) Settings ---
COAP_DEVICE_HOST=coap-device # This MUST match the service name for the client in docker-compose.yml
COAP_DEVICE_PORT=5683
COAP_DEVICE_SECURE_PORT=5684
ENABLE_DTLS_SERVER_CLIENT=false
COAP_PSK_IDENTITY=thermostat # MUST match client's PSK_IDENTITY
COAP_PSK_KEY=secretkey123    # MUST match client's PSK_KEY


# InfluxDB Configuration
INFLUXDB_INIT_MODE=setup
INFLUXDB_INIT_USERNAME=admin
INFLUXDB_INIT_PASSWORD=enocean123
INFLUXDB_INIT_ORG=enocean
INFLUXDB_INIT_BUCKET=sensors
INFLUXDB_INIT_ADMIN_TOKEN=admin_token_secret


INFLUXDB_URL=http://influxdb:8086
INFLUXDB_TOKEN=coap-token-1234567890
INFLUXDB_ORG=coap-data-org
INFLUXDB_BUCKET=coap-data-bucket


REDIS_URL=redis://redis:6379

POLL_INTERVAL=8
ML_RETRAIN_INTERVAL_HOURS=24

# Email Notification Settings (Optional for testing, requires a valid email/app password)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
EMAIL_USERNAME=youremail@gmail.com
EMAIL_PASSWORD=aaaa jjtc fifr sjej 
FROM_EMAIL=youremail@gmail.com  
ALERT_EMAIL=youremail@gmail.com
WEBHOOK_URLS=https://hooks.slack.com/services/T08SX4JAZ41/...

LOG_LEVEL=INFO # Can change to DEBUG for more detailed logs

# ===========================================
# Firebase Web Configuration (for frontend)
# ===========================================
# These are used in your web application
FCM_API_KEY=AIzaSyB5...
FCM_AUTH_DOMAIN=coap-notification-ser.firebaseapp.com
FCM_PROJECT_ID=coap-notification-ser
FCM_STORAGE_BUCKET=coap-notification-ser.firebasestorage.app
FCM_SENDER_ID=519009959392
FCM_APP_ID=1:519009959392:web:9dbfac0c0fc638422a...
FCM_VAPID_KEY=BK_sjI5gAe9Dld0QLL6ebsf--lZNNaCUUUhQT7r_...
FCM_SERVICE_ACCOUNT_PATH=/app/firebase-service-account-key.json


# FCM Server Configuration
# -----------------------
FCM_SERVER_PORT=5001


# =========================================== 
# Dashboard app
# ===========================================

# --- General Configuration ---
# A strong, random secret key for Flask sessions and security.
# IMPORTANT: Generate a new, unique key for any production deployment.
# You can generate one with: python -c 'import secrets; print(secrets.token_hex())'
FLASK_SECRET_KEY="change-me-to-a-super-secret-and-random-string"

# Set to 'true' for development (enables auto-reloading and debug messages).
# Set to 'false' for production.
DEBUG_MODE=true


# --- Application Network Settings ---
# The host the Flask/SocketIO app will bind to. 0.0.0.0 makes it accessible on the network.
DASHBOARD_APP_HOST=0.0.0.0

# The port the Flask/SocketIO app will run on.
DASHBOARD_APP_PORT=5000


# --- AI Controller Service URLs ---

# Option 1: For Local Development (running services on your machine)
# Use these values when the 'ai-controller' service is also running on localhost.
AI_CONTROLLER_WS_URL=ws://ai-controller:8092
AI_CONTROLLER_CONTROL_URL=http://ai-controller:8000/control/smart-thermostat-01