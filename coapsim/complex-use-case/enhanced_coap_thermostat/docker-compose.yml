# docker-compose.yml
version: '3.8'

services:
  # CoAP Device
  coap-device:
    hostname: coap-device
    build: 
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "5683:5683/udp"
      - "5684:5684/udp"  # Secure CoAP
    environment:
      - DEVICE_ID=smart-thermostat-01
      - ENABLE_DTLS=true
      - SENSOR_INTERVAL=2
    volumes:
      - ./certs:/app/certs
    networks:
      - thermostat-net
    restart: unless-stopped

  # AI Controller
  ai-controller:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8092:8092"
    depends_on:
      - coap-device
      - influxdb
      - redis
    environment:
      - COAP_DEVICE_HOST=coap-device
      - INFLUXDB_URL=http://influxdb:8086
      - REDIS_URL=redis://redis:6379
      - POLL_INTERVAL=3
      - ML_RETRAIN_INTERVAL_HOURS=24 # How often to retrain ML models
      - LOG_LEVEL=INFO # Set logging level (can be DEBUG for more verbose output)
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    networks:
      - thermostat-net
    restart: unless-stopped

  # # Real-time Dashboard
  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
    ports:
      - "5005:5000"
    depends_on:
      - ai-controller
    environment:
      - FLASK_ENV=production
    networks:
      - thermostat-net
    restart: unless-stopped

  # # Mobile API
  # mobile-api:
  #   build:
  #     context: .
  #     dockerfile: mobile/Dockerfile
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - ai-controller
  #     - postgres
  #   environment:
  #     - DATABASE_URL=postgresql://thermostat:password@postgres:5432/thermostat
  #     - JWT_SECRET=your-secret-key
  #   networks:
  #     - thermostat-net
  #   restart: unless-stopped

  # # Time Series Database
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword123
      - DOCKER_INFLUXDB_INIT_ORG=coap-data-org
      - DOCKER_INFLUXDB_INIT_BUCKET=coap-data-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=coap-token-1234567890
  
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - thermostat-net
    restart: unless-stopped

  # # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - thermostat-net
    restart: unless-stopped

  # # PostgreSQL for User Data
  # postgres:
  #   image: postgres:15
  #   environment:
  #     - POSTGRES_DB=thermostat
  #     - POSTGRES_USER=thermostat
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - thermostat-net
  #   restart: unless-stopped

  # # Reverse Proxy
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./certs:/etc/nginx/certs
  #   depends_on:
  #     - dashboard
  #     #- mobile-api
  #   networks:
  #     - thermostat-net
  #   restart: unless-stopped

  # # Monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - thermostat-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true # Optional: Allow anonymous access to dashboards
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer # Optional: Role for anonymous users
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards:ro # Mount dashboards JSONs
    depends_on:
      - prometheus
      - influxdb
    networks:
      - thermostat-net
    restart: unless-stopped

networks:
  thermostat-net:
    driver: bridge

volumes:
  influxdb_data:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data: